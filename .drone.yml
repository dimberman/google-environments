kind: pipeline
name: astronomer-environments

concurrency:
  limit: 1

steps:

- name: deploy_cloud_to_staging
  image: sjmiller609/helm-kubectl-terraform:latest
  environment:
    BASE_DOMAIN: staging.astronomer.io
    DEPLOYMENT_ID: staging
    PROJECT: astronomer-cloud-staging
    DIRECTORY: stage/cloud
    ZONAL: false
    TF_AUTO_APPROVE: true
    GOOGLE_CREDENTIAL_FILE_CONTENT:
      from_secret: GOOGLE_CREDENTIAL_FILE_CONTENT_STAGING
  commands:
    - bin/terraform_cloud.sh
  when:
    event:
      - push
    status:
      - success
    repo:
      - astronomer/google-environments

- name: notify_staging_updated
  image: plugins/slack
  settings:
    webhook:
      from_secret: WEBHOOK_URL
    channel: ci-debug
    username: terraform-ci
    template: >
      {{repo.name}}

      {{#success build.status}}
      deployment to stage cloud succeeded!

      https://app.staging.astronomer.io
      {{else}}
      ERROR deployment to stage cloud failed!

      build link: {{build.link}}
      {{/success}}
  when:
    event:
      - push
    status:
      - success
      - failure
    repo:
      - astronomer/google-environments

- name: terraform_plan_production
  image: sjmiller609/helm-kubectl-terraform:latest
  environment:
    BASE_DOMAIN: gcp0001.us-east4.astronomer.io
    TF_PLAN: true
    DEPLOYMENT_ID: prod
    PROJECT: astronomer-cloud-prod
    DIRECTORY: prod/cloud
    ZONAL: false
    GOOGLE_CREDENTIAL_FILE_CONTENT:
      from_secret: GOOGLE_CREDENTIAL_FILE_CONTENT_PROD
  commands:
    - bin/compare_stage_and_prod_cloud.sh
    - bin/terraform_cloud.sh
  when:
    event:
      - push
    status:
      - success
    repo:
      - astronomer/google-environments

- name: notify_promotion_production
  image: plugins/slack
  settings:
    webhook:
      from_secret: WEBHOOK_URL
    channel: ci-debug
    username: terraform-ci
    template: >
      {{repo.name}}

      Review the plan output here: {{build.link}}

      To release, configure drone locally:

      - go to https://cloud.drone.io/account for personal access token

      ```

      export DRONE_SERVER=https://cloud.drone.io

      export DRONE_TOKEN=your-token

      ```

      To update everything:

      ```

      drone build promote astronomer/google-environments ${DRONE_BUILD_NUMBER} production

      ```

      OR to update only the infrastructure (recommended - do this first):

      ```

      drone build promote astronomer/google-environments ${DRONE_BUILD_NUMBER} production-infra-only

      ```
  when:
    event:
      - push
    status:
      - success
    repo:
      - astronomer/google-environments

- name: deploy_to_production_force_redeploy
  image: sjmiller609/helm-kubectl-terraform:latest
  environment:
    BASE_DOMAIN: gcp0001.us-east4.astronomer.io
    DEPLOYMENT_ID: prod
    PROJECT: astronomer-cloud-prod
    DIRECTORY: prod/cloud
    ZONAL: false
    TF_FORCE_REDEPLOY: true
    TF_AUTO_APPROVE: true
    GOOGLE_CREDENTIAL_FILE_CONTENT:
      from_secret: GOOGLE_CREDENTIAL_FILE_CONTENT_PROD
  commands:
    - bin/compare_stage_and_prod_cloud.sh
    - bin/terraform_cloud.sh
  when:
    event:
      - promote
    repo:
      - astronomer/google-environments
    target:
      - production-force-redeploy

- name: deploy_to_staging_force_redeploy
  image: sjmiller609/helm-kubectl-terraform:latest
  environment:
    BASE_DOMAIN: staging.astronomer.io
    DEPLOYMENT_ID: staging
    PROJECT: astronomer-cloud-staging
    DIRECTORY: stage/cloud
    ZONAL: false
    TF_FORCE_REDEPLOY: true
    TF_AUTO_APPROVE: true
    GOOGLE_CREDENTIAL_FILE_CONTENT:
      from_secret: GOOGLE_CREDENTIAL_FILE_CONTENT_STAGING
  commands:
    - bin/compare_stage_and_prod_cloud.sh
    - bin/terraform_cloud.sh
  when:
    event:
      - promote
    repo:
      - astronomer/google-environments
    target:
      - staging-force-redeploy

- name: deploy_to_production
  image: sjmiller609/helm-kubectl-terraform:latest
  environment:
    BASE_DOMAIN: gcp0001.us-east4.astronomer.io
    DEPLOYMENT_ID: prod
    PROJECT: astronomer-cloud-prod
    DIRECTORY: prod/cloud
    ZONAL: false
    GOOGLE_CREDENTIAL_FILE_CONTENT:
      from_secret: GOOGLE_CREDENTIAL_FILE_CONTENT_PROD
  commands:
    - bin/compare_stage_and_prod_cloud.sh
    - bin/terraform_cloud.sh
  when:
    event:
      - promote
    status:
      - success
    repo:
      - astronomer/google-environments
    target:
      - production

- name: deploy_to_production_infra_only
  image: sjmiller609/helm-kubectl-terraform:latest
  environment:
    BASE_DOMAIN: gcp0001.us-east4.astronomer.io
    DEPLOYMENT_ID: prod
    PROJECT: astronomer-cloud-prod
    DIRECTORY: prod/cloud
    TF_INFRA_ONLY: true
    ZONAL: false
    GOOGLE_CREDENTIAL_FILE_CONTENT:
      from_secret: GOOGLE_CREDENTIAL_FILE_CONTENT_PROD
  commands:
    - bin/compare_stage_and_prod_cloud.sh
    - bin/terraform_cloud.sh
  when:
    event:
      - promote
    status:
      - success
    repo:
      - astronomer/google-environments
    target:
      - production-infra-only

- name: notify_prod_updated
  image: plugins/slack
  settings:
    webhook:
      from_secret: WEBHOOK_URL
    channel: ci-debug
    username: terraform-ci
    template: >
      {{repo.name}}

      {{#success build.status}}
      prod cloud updated! :sunglasses:

      https://app.gcp0001.us-east4.astronomer.io
      {{else}}
      ERROR: update of prod cloud failed!

      build link: {{build.link}}
      {{/success}}
  when:
    event:
      - promote
    status:
      - success
      - failure
    repo:
      - astronomer/google-environments
    target:
      - production
